#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'strscan'
module Piece
  class ExpressionParser < Racc::Parser

module_eval(<<'...end expression.y/module_eval...', 'expression.y', 22)
  class Exp < Struct.new(:op, :left, :right)
  end

  class Id < Struct.new(:val)
  end

  def parse(str)
    @tokens = []
    str = "" if str.nil?
    scanner = StringScanner.new(str + ' ')

    until scanner.eos?
      case
      when scanner.scan(/\s+/)
      # ignore space
      when m = scanner.scan(/[+-]/i)
        @tokens.push [:OP, m]
      when m = scanner.scan(/(\w+)\b/i)
        @tokens.push [:ID, m]
      when m = scanner.scan(/\*/i)
        @tokens.push [:ID, m]
      else
        raise "unexpected characters #{scanner.peek(5)}"
      end
    end
    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
...end expression.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,     4,     5,     6,     3 ]

racc_action_check = [
     0,     1,     2,     4,     5 ]

racc_action_pointer = [
    -3,     1,     0,   nil,     3,     1,   nil,   nil ]

racc_action_default = [
    -4,    -4,    -1,    -3,    -4,    -4,     8,    -2 ]

racc_goto_table = [
     2,     1,   nil,   nil,   nil,     7 ]

racc_goto_check = [
     2,     1,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     1,     0 ]

racc_goto_default = [
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 5, :_reduce_1,
  3, 6, :_reduce_2,
  1, 6, :_reduce_3 ]

racc_reduce_n = 4

racc_shift_n = 8

racc_token_table = {
  false => 0,
  :error => 1,
  :OP => 2,
  :ID => 3 }

racc_nt_base = 4

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OP",
  "ID",
  "$start",
  "target",
  "exp" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'expression.y', 11)
  def _reduce_1(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'expression.y', 14)
  def _reduce_2(val, _values)
     Exp.new(val[1], val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'expression.y', 15)
  def _reduce_3(val, _values)
     Id.new(val[0]) 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class ExpressionParser
  end   # module Piece
